一、给元素插入值
1、innerHtml是标签内的文本,输入输出到该DOM内部纯HTML代码(流);
(获得td、div等html元素时候,它们是没有value或是text属性,只能用innerHtml)
document.getElementById(id).innerHTML=new HTML;
改变属性：document.getElementById(id).attribute=new value；

2、value是表单元素特有的属性,输入输出的是转义文本(字符串);
(Button、CheckBox、Radio)随表单一起发送的值;
(Reset、Submit)标签;
(Text、Hidden)默认值;
(File、Password)
(注: Text控件用value有效)
document.getElementById(id).value = 120;

3、html和text、val都是jquery/zepto的方法，只对jq对象有用;

二、输入内容发生改变的事件
1、onchange事件在内容发生改变（两次内容有可能还是相等的）且元素失去焦点后触发，作用于单选框、复选框、输入框、<keygen> 和 <select>。
   用法：
   <input type="text" placeholder="请输入数字" onchange ="changed()">
   或  document.getElementById("inputBox").onchange = function() {....}
   
2、oninput 事件是 IE 之外的大多数浏览器支持的事件，适用于input或者textarea元素只在 value 改变时触发，要通过 addEventListener() 来注册，实时的，
   即每增加或删除一个字符就会触发，然而通过 js 改变 value 时，却不会触发。
   用法：
   <input type="text" placeholder="请输入数字" oninput ="changed()">
   或   document.getElementById("inputBox").oninput = function() {....}
   
   或   document.getElementById("myInput").addEventListener("input", myFunction);
        function myFunction() {
            alert("input 输入框值已发生变化。");
        }

3、onpropertychange事件是任何属性改变都会触发，即每增加或删除一个字符就会触发，通过 js 改变也会触发该事件，但是该事件 IE 专有。
   当 input 设置为 disable=true后，onpropertychange 不会触发。

三、toString与toLocaleString的区别：
1、数字转换成字符串的时候，当数字为3位以上时，toLocaleString会自动用","进行三位分割。

2、转换标准时间格式时：
	var sd=new Date()；
	sd：Wed Feb 15 2017 11:21:31 GMT+0800 (CST)
	sd.toLocaleString()  ---"2017/2/15 上午11:21:31"
	sd.toString()  ---"Wed Feb 15 2017 11:21:31 GMT+0800 (CST)"
   

四、parseInt()、Number()、parseFloat()、String()的区别
1、parseInt()解析字符串并返回整数，语法：parseInt(string,radix); string必须。radix为基数，选填，该值介于 2 ~ 36 之间。
   string允许开头和结尾有空格，只有字符串中的第一个数字会被返回，如果字符串的第一个字符不能被转换为数字，那么 parseInt() 会返回 NaN。
   如果 string 以 "0x" 开头，parseInt() 会把 string 的其余部分解析为十六进制的整数。
   在字符串以"0"为开始时旧的浏览器默认使用八进制基数。ECMAScript 5，默认的是十进制的基数。
   例：document.write(parseInt("10.33") + "<br>");      10
      document.write(parseInt("34 45 66") + "<br>");    34
      document.write(parseInt("He was 40") + "<br>");   NaN
      document.write(parseInt("10",10)+ "<br>");       10
      document.write(parseInt("010")+ "<br>");         10
      document.write(parseInt("10",8)+ "<br>");        8
      document.write(parseInt("0x10")+ "<br>");        16
      document.write(parseInt("10",16)+ "<br>");       16
   
2、Number()将字符串解析成数字（可以是整数或浮点数），只能解析成10进制，没有基数。语法：Number(object); object可选，如果没有提供参数，则返回0。
   如果参数是 Date 对象，Number() 返回从 1970 年 1 月 1 日至今的毫秒数。
   如果参数是字符串：
    a.  如果字符串中只包含数字时，将其转换为十进制数值，忽略前导0
    b. 如果字符串中包含有效浮点格式，如“1.1”，将其转换为对应的浮点数字，忽略前导0
    c. 如果字符串中包含有效的十六进制格式，如“0xf”，将其转换为相同大小的十进制数值
    d. 如果字符串为空，将其转换为0
    e. 如果字符串中包含除上述格式之外的字符，则将其转换为NaN
   例：var test1= new Boolean(true);
       var test2= new Boolean(false);
       var test3= new Date();
       var test4= new String("999");
       var test5= new String("999 888");

       document.write(Number(test1)+ "<br>");    1
       document.write(Number(test2)+ "<br>");    0
       document.write(Number(test3)+ "<br>");    1525914580239
       document.write(Number(test4)+ "<br>");    999
       document.write(Number(test5)+ "<br>");    NaN
       document.write(Number("0000011"));        11
       
3、parseFloat()将字符串转换为浮点数。
  参数允许开头和结尾的空格，如果字符串的第一个字符不能被转换为数字，那么 parseFloat() 会返回 NaN。
  例：document.write(parseFloat("10") + "<br>");     10
     document.write(parseFloat("10.33") + "<br>");   10.33
     document.write(parseFloat("34 45 66") + "<br>");  34
     document.write(parseFloat(" 60 ") + "<br>");    60
     document.write(parseFloat("40 years") + "<br>");   40
     document.write(parseFloat("He was 40") + "<br>");  NaN

4、String()将对象值转换为字符串。语法：String(object);
   与字符串的toString()方法值一样。 语法：number.toString(radix)；radix可选，默认为10进制。
   例：var test1 = new Boolean(1);             document.write(String(test1)+ "<br>");       true
       var test2 = new Boolean(0);            document.write(String(test2)+ "<br>");       false
       var test3 = new Boolean(true);         document.write(String(test3)+ "<br>");       true
       var test4 = new Boolean(false);        document.write(String(test4)+ "<br>");       false
       var test5 = new Date();                document.write(String(test5)+ "<br>");       Thu May 10 2018 09:35:50 GMT+0800
       var test6 = new String("999 888");     document.write(String(test6)+ "<br>");       999 888
       var test7 = 12345;                     document.write(String(test7)+ "<br>");       12345

